

---------------------------------------------------------------
1. Load fasta file into a seq variable with

    seq = seq_from_fasta('file_path.fasta')


2. Max rotate the sequence seq to get its corresponding cg and cgc curve as well as t

    max_things = max_rotate_seq_and_skew_calc(seq, window_radius)

    max_cg = max_things[0]
    max_cgc = max_things[1]
    max_fasta = max_things[2]
    max_offset = max_things[3]



2'. Compute the z-curve components for the max rotated sequence

    xn, yn, zn = calc_z_curve(max_fasta)

    RY = xn
    KM = yn


3. Normalize cgc, RY and KM skews

    cgc_scaled = scale_skew(max_cgc)
    RY_scaled = scale_skew(RY)
    KM_scaled = scale_skew(KM)


4. Construct score curve by some combination of scaled skews from 3

    ...
    ..
    .



5. Extract non coding region information from genbank file.

    g = genbank_to_non_coding_intervals('genbank_path.gb')

    true_nc_intervals = g[0] # - List of touples
    true_nc_positions = g[1] # - all NC positions in an arrays
    non_coding_plus = g[2] # - nc regions interval touple list
    non_coding_neg  = g[] # - nc regions interval touple list


6. From true non coding inervals obtain a region_list of nc_regions
for the score input the score curve

    all_nc_regions = get_phased_nc_region_list(true_nc_intervals, og_fasta, max_offset, score_curve):



7. Calculate kmer info for all regions for a number of kmer lengths

    kmer_lengths_of_interrest = [6,7,8,9]

    all_nc_regions = orite.calc_kmers_from_region_list(all_nc_regions, kmer_lengths_of_interrest)



8. Filter out non coding regions belowe a certain length l = 50
    long_enough_regions = orite.filter_regions_by_length(all_nc_regions, 50)


9. Filter out kmer_rows with occurances less than 3
9'. Calculate also the densities while your at it?

    regions_3_and_more_occ = orite.filter_region_list_by_kmer_occurence(region_list, n)


10. calc densities of remaining kmers




11. Remove kmers rows wtih overlapping with itself (this isnt repeating)

    regions_overlapp_removed = orite.remove_overlapping_kmers_from_region_list(regions_3_and_more_occ)




at_skew_sliding_window
